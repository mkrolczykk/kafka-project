version: '2.1'

services:
  zookeper1:
    image: confluentinc/cp-zookeeper:${CONF_VERSION}
    hostname: zookeper1
    container_name: zookeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: 0.0.0.0:2888:3888;zookeper2:2888:3888;zookeper3:2888:3888
      TZ: ${TIME_ZONE}
    volumes: 
      - ./containers-data/zookeper/zoo-1/data:/var/lib/zookeeper/data
      - ./containers-data/zookeper/zoo-1/log:/var/lib/zookeeper/log
  
  zookeper2:
    image: confluentinc/cp-zookeeper:${CONF_VERSION}
    hostname: zookeper2
    container_name: zookeper2
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeper1:2888:3888;0.0.0.0:2888:3888;zookeper3:2888:3888
      TZ: ${TIME_ZONE}
    volumes: 
      - ./containers-data/zookeper/zoo-2/data:/var/lib/zookeeper/data
      - ./containers-data/zookeper/zoo-2/log:/var/lib/zookeeper/log

  zookeper3:
    image: confluentinc/cp-zookeeper:${CONF_VERSION}
    hostname: zookeper3
    container_name: zookeper3
    ports:
      - "2183:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeper1:2888:3888;zookeper2:2888:3888;0.0.0.0:2888:3888
      TZ: ${TIME_ZONE}
    volumes: 
      - ./containers-data/zookeper/zoo-3/data:/var/lib/zookeeper/data
      - ./containers-data/zookeper/zoo-3/log:/var/lib/zookeeper/log

  broker1:
    image: confluentinc/cp-kafka:${CONF_VERSION}
    hostname: broker1
    container_name: broker1
    depends_on:
      - zookeper1
      - zookeper2
      - zookeper3
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeper1:2181,zookeper2:2181,zookeper3:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_LOG_DIRS: /var/lib/kafka/logs
      TZ: ${TIME_ZONE}

  broker2:
    image: confluentinc/cp-kafka:${CONF_VERSION}
    hostname: broker2
    container_name: broker2
    depends_on:
      - zookeper1
      - zookeper2
      - zookeper3
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeper1:2181,zookeper2:2181,zookeper3:2181
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_LOG_DIRS: /var/lib/kafka/logs
      TZ: ${TIME_ZONE}

  broker3:
    image: confluentinc/cp-kafka:${CONF_VERSION}
    hostname: broker3
    container_name: broker3
    depends_on:
      - zookeper1
      - zookeper2
      - zookeper3
    ports:
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker3:19094,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeper1:2181,zookeper2:2181,zookeper3:2181
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_LOG_DIRS: /var/lib/kafka/logs
      TZ: ${TIME_ZONE}

  kafka-connect:
    container_name: kafka-connect
    image: confluentinc/cp-kafka-connect:${CONF_VERSION}
    depends_on:
      - zookeper1
      - zookeper2
      - zookeper3
      - broker1
      - broker2
      - broker3
      - schema-registry
    ports:
      - '8083:8083'
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker1:19092,broker2:19093,broker3:19094
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-compose-group
      CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components/'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      TZ: ${TIME_ZONE}
    command: 
      - bash 
      - -c 
      - |

        # ---Install kafka-connect plugins---
        # This will by default install into /usr/share/confluent-hub-components/ so make
        # sure that this path is added to the plugin.path in the environment variables
        
        # kafka-connect-spooldir
        confluent-hub install --no-prompt jcustenborder/kafka-connect-spooldir:${SPOOLDIR_PLUGIN_VERSION}

        # Launch the Kafka Connect worker
        /etc/confluent/docker/run &

        # Don't exit
        sleep infinity
    volumes:
      - ./containers-data/kafka-connect/kafka-connect-rest:/usr/share/java/kafka-connect-rest
      - ./containers-data/kafka-connect/data:/data

  schema-registry:
    image: confluentinc/cp-schema-registry:${CONF_VERSION}
    container_name: schema-registry
    ports:
      - 8081:8081
    depends_on:
      - zookeper1
      - zookeper2
      - zookeper3
      - broker1
      - broker2
      - broker3
    volumes:
      - ./containers-data/schema-registry/scripts:/scripts
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker1:19092,broker2:19093,broker3:19094
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: "none"
      SCHEMA_REGISTRY_LISTENERS: "http://schema-registry:8081"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: "WARN"
      TZ: ${TIME_ZONE}

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:${KSQL_DB_VERSION}
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - broker1
      - broker2
      - broker3
      - kafka-connect
      - schema-registry
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker1:19092,broker2:19093,broker3:19094
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
  
  additional-ksqldb-server:
    image: confluentinc/cp-ksqldb-server:${KSQL_DB_VERSION}
    hostname: additional-ksqldb-server
    depends_on:
      - ksqldb-server
    ports:
      - "8090"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8090
      KSQL_BOOTSTRAP_SERVERS: broker1:19092,broker2:19093,broker3:19094
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:${KSQL_DB_VERSION}
    container_name: ksqldb-cli
    depends_on:
      - broker1
      - broker2
      - broker3
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true