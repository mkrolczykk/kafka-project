---
version: '2.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONF_VERSION}
    hostname: zookeeper
    container_name: zookeeper-test
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:${CONF_VERSION}
    hostname: broker
    container_name: broker-test
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:${KSQL_DB_VERSION}
    hostname: ksqldb-server
    container_name: ksqldb-server-test
    depends_on:
      - broker
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker:9092
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:${KSQL_DB_VERSION}
    container_name: ksqldb-cli-test
    depends_on:
      - broker
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  # This "container" is a workaround to pre-create required topics for e2e tests.
  # https://github.com/confluentinc/examples/blob/f854ac008952346ceaba0d1f1a352788f0572c74/microservices-orders/docker-compose.yml#L182-L215
  kafka-setup:
    image: confluentinc/cp-kafka:${CONF_VERSION}
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - broker
      - zookeeper
    command: "bash -c 'echo waiting for kafka to be ready... && \
                cub kafka-ready -b broker-test:9092 1 30 && \
                kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --topic githubAccounts --partitions 1 --replication-factor 1 && \
                kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --topic githubCommits --partitions 1 --replication-factor 1'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored