<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>github-accounts-app</module>
        <module>kafka-stream-metrics</module>
        <module>modules-tests</module>
    </modules>

    <name>kafka-project</name>
    <description>Apache Kafka project</description>

    <groupId>com.github.mkrolczyk12.kafka</groupId>
    <artifactId>kafka-project</artifactId>
    <version>0.11-SNAPSHOT</version>

    <packaging>pom</packaging>

    <!--  Project properties  -->
    <properties>
        <!-- dependencies versions -->
        <kafka.version>2.4.1</kafka.version>
        <kafka.streams.version>2.4.1</kafka.streams.version>
        <kafka.streams.test.utils.version>2.4.1</kafka.streams.test.utils.version>
        <spring.kafka.version>2.4.5.RELEASE</spring.kafka.version>
        <spring.boot.starter.test.version>2.2.6.RELEASE</spring.boot.starter.test.version>
        <spring.webflux.version>5.2.3.RELEASE</spring.webflux.version>
        <reactor.core.version>3.3.3.RELEASE</reactor.core.version>
        <reactor.netty.version>0.9.5.RELEASE</reactor.netty.version>
        <netty.resolver.dns.version>4.1.75.Final</netty.resolver.dns.version>
        <log4j.version>2.0.0-alpha5</log4j.version>
        <jackson.version>2.13.0</jackson.version>
        <mockito.version>3.3.0</mockito.version>
        <assertj.version>3.15.0</assertj.version>
        <junit.jupiter.version>5.7.0</junit.jupiter.version>
        <junit.platform.common.version>1.7.0</junit.platform.common.version>
        <junit.version>4.13.2</junit.version>
        <org.awaitility.version>4.0.2</org.awaitility.version>
        <mockserver.netty.version>5.9.0</mockserver.netty.version>
        <mockserver.client.java.version>5.9.0</mockserver.client.java.version>

        <!-- env properties -->
        <itest-name-template>**/*IT.java</itest-name-template>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <!-- build properties -->
        <maven.surefire.plugin.version>3.0.0-M4</maven.surefire.plugin.version>
        <maven.assembly.plugin.version>3.3.0</maven.assembly.plugin.version>
        <maven.jaCoCo.plugin.version>0.8.7</maven.jaCoCo.plugin.version>
        <maven.failsafe.plugin.version>3.0.0-M4</maven.failsafe.plugin.version>
        <build.helper.maven.plugin.version>3.3.0</build.helper.maven.plugin.version>
    </properties>

    <dependencies>
        <!-- kafka client -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- for logging purposes -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <!-- JSON processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- testing libraries -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <!--  Build properties  -->
    <build>
        <plugins>
            <!-- used during the test phase of the build lifecycle to execute the unit tests of an application -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
            <!-- runs the coverage by instrumenting Java code through a runtime agent -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven.jaCoCo.plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>